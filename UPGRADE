Zoph 0.8.1 to 0.8.1.1
=====================
Copy php/* to the location of your installation. Make sure to also copy the php/lang subdirectory.

You can upgrade directly from 0.8 to 0.8.1.1, simply use the zoph-0.8.1.1.tar.gz and execute the instructions for the 0.8 to 0.8.1 upgrade.

Zoph 0.8 to 0.8.1
=================
    * Follow the upgrade instructions to 0.8 first if you are using an older version. (no need to really download and install v0.8, just execute the upgrade instructions).

Copy php/* to the location of your installation. Make sure that you also copy the js and img subdirectories. If you use the translations in Zoph, make sure to also copy the lang directory.
Updating the database
---------------------

Zoph 0.8.1 requires a manual upgrade to the database, see "Changing your database to UTF-8".

Execute zoph-update-0.8.sql:

mysql -u zoph_admin -p zoph < sql/zoph_update-0.9.sql

Change zoph into zophutf8 if you are working on the temporary database.

The database upgrade script makes the following changes:

    * Make the language field in the prefs table longer so languages like en-ca can be stored (0.8.1)

Configuration updates
  New options
    * LOG_ALWAYS (0.8.1)
    * LOG_SEVERITY (0.8.1)
    * LOG_SUBJECT (0.8.1)
(see http://en.wikibooks.org/wiki/Zoph/Configuration for details)

Changing your database to UTF-8
===============================

As of Zoph v0.8.1, Zoph is using UTF-8 character encoding. In order to fully benefit from this change, you need to convert your database to UTF-8 encoding as well; especially if you are using any non-latin characters in your database.

***Important!***
This could be a riskful operation, make sure you make a backup of your database and do not delete it until you are very sure everything has converted correctly.
Contents

Converting the database to UTF-8
--------------------------------
The safest way to perform this operation is probably to create a second Zoph database and test against that. This document will describe that method. If you wish to go back to the old database name later or can only use a single database, because of hosting restrictions, you will have to drop the "old" database and re-use the same database. Double-check your backup in that case!

Create a backup
  mysqldump -u root -p zoph | gzip > zoph.sql.gz

Create a new database, with UTF-8 encoding
  mysql -u root -p
  mysql> CREATE DATABASE zophutf8 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
  mysql> exit

***Important!***
You can not use ALTER TABLE to do this, because MySQL will then set the character encoding of the database to UTF-8, but will leave it on whatever it is (usually Latin-1) for the tables

Find out what your current encoding is:
  zcat zoph.sql.gz | grep CHARSET

Usually you will see several lines that look like this

) ENGINE=MyISAM DEFAULT CHARSET=latin1;

In this case we have been using latin1 encodig so far. You will also see that some lines contain things like AUTO_INCREMENT=161, those are not important for us now.

We will now change the encoding in this file to UTF-8. In the tests I have done, it was not needed to really convert the character sets, it was sufficient to just change the name of the encoding. If you do run into issues with texts that were correctly displaying before the change and no longer after the change, you may need to use iconv to do a conversion. If you do need that, let me know, or add the information to this document.

  zcat zoph.sql.gz | sed "s/CHARSET=latin1/CHARSET=utf8/g" | gzip > zophutf8.sql.gz

Import the database into the newly create database:

  zcat zophutf8.sql.gz | mysql -u root -p zophutf8

You need to update config.inc.php and give rights to the user you use to connect to MySQL.

config.inc.php:
  define('DB_NAME', 'zophutf8');
  define('DB_USER', 'zoph_rw');
  define('DB_PASS', 'PASSWORD');

mysql -u root -p
mysql> grant select, insert, update, delete on zophutf8.* to zoph_rw@localhost identified by 'PASSWORD';
mysql> grant all on zophutf8.* to zoph_admin identified by 'PASSWORD';

Now, perform the rest of the update and test!

Changing the database name back to zoph
---------------------------------------
If you have tested and confirmed that the new database is working for you, and you want to change the name of the database back to zoph, you need to perform these steps. These steps are not really necessary, but do keep in mind that future Zoph documentation will refer to the database by the name of zoph and not zophutf8.

  mysqldump -u root -p zophutf8 | gzip > zophutf8.sql.gz
  mysqladmin -u root -p drop zoph
  mysql -u root -p
  mysql> CREATE DATABASE zoph DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
  mysql> exit
  zcat zophutf8.sql.gz | mysql -u root -p zoph

config.inc.php:
  define('DB_NAME', 'zoph');
  define('DB_USER', 'zoph_rw');
  define('DB_PASS', 'PASSWORD');

  mysql -u root -p
  mysql> grant select, insert, update, delete on zoph.* to zoph_rw@localhost identified by 'PASSWORD';
  mysql> grant all on zoph.* to zoph_admin identified by 'PASSWORD';

Rolling back to the old database
--------------------------------
If you find during testing that the database conversion has not worked for you, you can easily roll back to the old database by changing config.inc.php:

  define('DB_NAME', 'zoph')

Please report a bug or post on the forum if you do run into problems.

For upgrades from an older version of Zoph: http://en.wikibooks.org/wiki/Zoph/Upgrading/Archive